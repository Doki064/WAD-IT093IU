version: "3"

services:
    frontend:
        container_name: Streamlit
        build: ./frontend
        image: frontend:${TAG-latest}
        env_file:
            - .env
        environment:
            - BASE_URL=http://${DOMAIN:?variable not set}:8080
            - API_PATH=${API_PATH:?variable not set}
        working_dir: /app
        ports:
            - "80:8501"
        networks:
            - frontend
        depends_on:
            - backend

    backend:
        container_name: FastAPI
        build: ./backend
        image: backend:${TAG-latest}
        env_file:
            - .env
        environment:
            - SERVER_DOMAIN=${DOMAIN:?variable not set}
            - SERVER_URL=http://${DOMAIN:?variable not set}:8080
        working_dir: /app
        ports:
            - "8080:8080"
        networks:
            - frontend
            - backend
        depends_on:
            - db

    pgadmin:
        container_name: pgAdmin
        image: dpage/pgadmin4
        tty: true
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
        volumes:
            - pgadmin:/var/lib/pgadmin4/storage
        ports:
            - "5050:80"
        networks:
            - backend
        depends_on:
            - db

    db:
        container_name: PostgreSQL
        image: postgres:latest
        env_file:
            - .env
        environment:
            - POSTGRES_USER=${POSTGRES_USER:-postgres}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
            - POSTGRES_DB=${POSTGRES_DB:-postgres}
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - backend

volumes:
    storage:
    pgadmin:
    pgdata:

networks:
    frontend:
        name: frontend
        driver: bridge
    backend:
        name: backend
        driver: bridge
